{
  "app": {
    "signal": {
      "SIGINT": "SIGINT (Ctrl-C) ricevuto."
    },
    "start": "{{name}} Avviato.",
    "stop": "{{name}} Fermato."
  },
  "error": {
    "errorConfig": {
      "DB_SERVER_HOST_NOT_FOUND": "DB_SERVER_HOST variabile d'ambiente non trovata.",
      "DB_SERVER_PASSWORD_NOT_FOUND": "DB_SERVER_PASSWORD variabile d'ambiente non trovata.",
      "DB_SERVER_PORT_NOT_FOUND": "DB_SERVER_PORT variabile d'ambiente non trovata.",
      "DB_SERVER_USER_NOT_FOUND": "DB_SERVER_USER variabile d'ambiente non trovata.",
      "DRAGONFLY_HOST_NOT_FOUND": "DRAGONFLY_HOST variabile d'ambiente non trovata.",
      "DRAGONFLY_PORT_NOT_FOUND": "DRAGONFLY_PORT variabile d'ambiente non trovata.",
      "HTTP_PORT_NOT_FOUND": "HTTP_PORT variabile d'ambiente non trovata.",
      "NODE_ENV_NOT_FOUND": "NODE_ENV variabile d'ambiente non trovata.",
      "RED_PANDA_BROKER_NOT_FOUND": "RED_PANDA_BROKER variabile d'ambiente non trovata.",
      "WS_PORT_NOT_FOUND": "WS_PORT variabile d'ambiente non trovata."
    },
    "errorInfrastructure": {
      "DATABASE_CONNECTION_ERROR": "Errore di connessione al database {{databaseName}}.",
      "DATABASE_DISCONNECT_ERROR": "Errore di disconnessione del database {{databaseName}}.",
      "DATABASE_MODEL_NOT_CREATED": "Modello {{tableName}} non creato, nel database {{databaseName}}.",
      "DATABASE_MODEL_NOT_DELETED": "Modello {{tableName}} non eliminato, nel database {{databaseName}}.",
      "DATABASE_MODEL_NOT_FOUND": "Modello {{tableName}} non trovato, nel database {{databaseName}}.",
      "DATABASE_MODEL_NOT_UPDATED": "Modello {{tableName}} non aggiornato, nel database {{databaseName}}.",
      "DATABASE_MODEL_UNIQUE_CONSTRAINT_ERROR": "Modello {{tableName}} errore di vincolo univoco [{{constraint}}], nel database {{databaseName}}.",
      "DATABASE_NOT_CONNECTED": "Il database {{databaseName}} non è connesso.",
      "DATABASE_NOT_FOUND_IN_DATABASE_MANAGER": "Database {{databaseName}} non trovato nel database manager.",
      "DATABASE_OTHER_DATABASE_ERROR": "Altro errore del database, nel database {{databaseName}}.",
      "DRAGONFLY_CONNECTION_ERROR": "Errore di connessione Dragonfly.",
      "DRAGONFLY_DISCONNECT_ERROR": "Errore di disconnessione Dragonfly.",
      "DRAGONFLY_NOT_CONNECTED": "Dragonfly non è connesso.",
      "RED_PANDA_CONSUMER_CONNECTION_ERROR": "Errore di connessione del consumatore RedPanda.",
      "RED_PANDA_CONSUMER_DISCONNECT_ERROR": "Errore di disconnessione del consumatore RedPanda.",
      "RED_PANDA_CONSUMER_IS_NOT_CONNECTED": "Il consumatore RedPanda non è connesso.",
      "RED_PANDA_CONSUMER_SUBSCRIBE_ERROR": "Errore di sottoscrizione del consumatore RedPanda.",
      "RED_PANDA_PRODUCER_CONNECTION_ERROR": "Errore di connessione del produttore RedPanda.",
      "RED_PANDA_PRODUCER_DISCONNECT_ERROR": "Errore di disconnessione del produttore RedPanda.",
      "RED_PANDA_PRODUCER_IS_NOT_CONNECTED": "Il produttore RedPanda non è connesso.",
      "RED_PANDA_PRODUCER_SEND_ERROR": "Errore di invio del produttore RedPanda."
    },
    "errorMiddleware": {
      "CREDENTIAL_BLACKLISTED": "conto in lista nera.",
      "PERMISSION_DENIED": "Permesso negato.",
      "TOKEN_EXPIRED": "Il token è scaduto.",
      "TOKEN_INVALID": "Il token non è valido.",
      "TOKEN_INVALID_SIGNATURE": "La firma del token non è valida.",
      "TOKEN_INVALID_STRUCTURE": "La struttura del token non è valida",
      "TOKEN_NO_FOUND": "Il bearer token non è stato trovato."
    },
    "errorSchema": {
      "$EQ_PATTERN": "Il valore deve essere di tipo stringa o numero o booleano.",
      "$GTE_PATTERN": "Il valore deve essere di tipo numero o stringa.",
      "$GT_PATTERN": "Il valore deve essere di tipo numero o stringa.",
      "$IN_ARRAY_PATTERN": "L'array deve avere almeno un elemento di tipo stringa.",
      "$LTE_PATTERN": "Il valore deve essere di tipo numero o stringa.",
      "$LT_PATTERN": "Il valore deve essere di tipo numero o stringa.",
      "$MATCH_PATTERN": "Il valore deve essere di tipo stringa.",
      "$NEQ_PATTERN": "Il valore deve essere di tipo stringa o numero o booleano.",
      "$NIN_ARRAY_PATTERN": "L'array non deve avere elementi di tipo stringa.",
      "ADDITIONAL_PROPERTIES": "Proprietà aggiuntive non sono consentite.",
      "DATE_PATTERN": "La data deve essere una data valida.",
      "EMAIL_BLACKLIST": "L'email deve essere un indirizzo email valido e non essere nella blacklist.",
      "EMAIL_IS_REQUIRED": "L'email è obbligatoria.",
      "EMAIL_OR_USERNAME_REQUIRED": "L'email o il nome utente è obbligatorio.",
      "EMAIL_PATTERN": "L'email deve essere un indirizzo email valido.",
      "LIMIT_PATTERN": "Il limite deve essere un intero compreso tra 1 e 100",
      "MUST_BE_ARRAY_OR_OBJECT": "Deve essere un array o un oggetto.",
      "NO_BODY": "Nessun corpo trovato.",
      "OFFSET_PATTERN": "L'offset deve essere un intero maggiore o uguale a 0",
      "PASSWORD_IS_REQUIRED": "La password è obbligatoria.",
      "PASSWORD_PATTERN": "La password deve contenere almeno una lettera maiuscola, una lettera minuscola, un numero e un carattere speciale e deve avere una lunghezza minima di 8 caratteri e una lunghezza massima di 32 caratteri.",
      "PERMISSION_PATTERN": "Il permesso deve essere alfanumerico e compreso tra 3 e 32 caratteri.",
      "ROLE_PATTERN": "Il ruolo deve essere alfanumerico e compreso tra 3 e 16 caratteri.",
      "TYPE_OBJECT": "Il tipo deve essere un oggetto.",
      "USERNAME_IS_REQUIRED": "Il nome utente è obbligatorio.",
      "USERNAME_PATTERN": "Il nome utente può contenere solo lettere e numeri e deve avere una lunghezza minima di 4 caratteri e una lunghezza massima di 32 caratteri."
    },
    "errorUseCase": {
      "PASSWORD_NOT_VALID": "La password non è valida."
    }
  },
  "http": {
    "close": "Server HTTP chiuso.",
    "handler": {
      "CRUD": {
        "count": "conteggio riuscito. Database::{{databaseName}} -> Table::{{tableName}}.",
        "delete": "{{x}} modelli eliminati con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "deleteAll": "Tutti i {{x}} modelli eliminati con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "deleteOne": "Modello eliminato con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "find": "{{x}} modelli trovati con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "findAll": "Tutti i {{x}} modelli trovati con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "findOne": "Modello trovato con successo. Database::{{databaseName}} -> Table::{{tableName}}.",
        "insert": "inserimento riuscito di {{x}} elementi. Database::{{databaseName}} -> Table::{{tableName}}.",
        "truncate": "Troncamento riuscito. Database::{{databaseName}} -> Table::{{tableName}}.",
        "update": "Aggiornamento di {{x}} elementi riuscito. Database::{{databaseName}} -> Table::{{tableName}}.",
        "updateAll": "Aggiornamento riuscito di tutti i {{x}} modelli. Database::{{databaseName}} -> Table::{{tableName}}.",
        "updateOne": "aggiornamento riuscito del modello. Database::{{databaseName}} -> Table::{{tableName}}."
      },
      "authHandler": {
        "blacklist-check": "L'account non è nella blacklist.",
        "delete": "Eliminazione dell'account riuscita.",
        "login": "Accesso riuscito.",
        "logout": "Logout riuscito.",
        "register": "Registrazione riuscita.",
        "token-blacklist-check": "Il token è valido e l'account non è nella blacklist.",
        "token-check": "Il token è valido.",
        "update": "Aggiornamento dell'account riuscito."
      },
      "microserviceHandler": {
        "info": "Informazioni recuperate con successo.",
        "ping": "pong"
      }
    },
    "listening": "Il server HTTP è in ascolto sulla porta {{port}} in modalità {{mode}}. (Prefisso: {{prefix}}) PID: {{pid}}",
    "plugin": {
      "RateLimitPlugin": {
        "RATE_LIMIT": "Limite di velocità {{max}} superato. Riprova tra {{timeWindow}} secondi."
      }
    }
  },
  "infrastructure": {
    "database": {
      "connected": "Database {{databaseName}} connesso.",
      "disconnected": "Database {{databaseName}} disconnesso.",
      "rollback_all_migrations": "I rollback di tutte le migrazioni del database {{databaseName}}.",
      "run_all_mirations": "Migrazioni del database {{databaseName}} eseguite.",
      "run_all_seeds": "Semi del database {{databaseName}} eseguiti."
    },
    "dragonfly": {
      "connected": "Dragonfly connesso.",
      "disconnected": "Dragonfly disconnesso."
    },
    "redpanda": {
      "consumer_connected": "RedPanda Consumer connesso.",
      "consumer_disconnected": "RedPanda Consumer disconnesso.",
      "producer_connected": "RedPanda Producer connesso.",
      "producer_disconnected": "RedPanda Producer disconnesso."
    }
  }
}