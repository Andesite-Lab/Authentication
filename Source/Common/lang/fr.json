{
  "app": {
    "start": "{{name}} Démarré",
    "stop": "{{name}} Arrêté",
    "signal": {
      "SIGINT": "SIGINT (Ctrl-C) reçu."
    }
  },
  "infrastructure": {
    "redpanda": {
      "producer_connected": "RedPanda Producer connecté.",
      "producer_disconnected": "RedPanda Producer déconnecté.",
      "consumer_connected": "RedPanda Consumer connecté.",
      "consumer_disconnected": "RedPanda Consumer déconnecté."
    },
    "database": {
      "connected": "Database connectée.",
      "disconnected": "Database déconnectée.",
      "migrations_run": "Database migrations run.",
      "migrations_rollback_all": "Database migrations rollback all.",
      "seeders_run": "Database seeds run."
    },
    "dragonfly": {
      "connected": "Dragonfly connecté.",
      "disconnected": "Dragonfly déconnecté."
    }
  },
  "error": {
    "errorConfig": {
      "NODE_ENV_NOT_FOUND": "NODE_ENV environment variable not found.",
      "DB_HOST_NOT_FOUND": "DB_HOST environment variable not found.",
      "DB_NAME_NOT_FOUND": "DB_NAME environment variable not found.",
      "DB_PASSWORD_NOT_FOUND": "DB_PASSWORD environment variable not found.",
      "DB_USER_NOT_FOUND": "DB_USER environment variable not found.",
      "DB_PORT_NOT_FOUND": "DB_PORT environment variable not found.",
      "COOKIE_SECRET_NOT_FOUND": "COOKIE_SECRET environment variable not found.",
      "HOST_NOT_FOUND": "HOST environment variable not found.",
      "HTTP_PORT_NOT_FOUND": "HTTP_PORT environment variable not found.",
      "RED_PANDA_BROKER_NOT_FOUND": "RED_PANDA_BROKER environment variable not found.",
      "WS_PORT_NOT_FOUND": "WS_PORT environment variable not found."
    },
    "errorInfrastructure": {
      "KAFKA_PRODUCER_CONNECTION_ERROR": "Kafka producteur erreur de connexion.",
      "KAFKA_PRODUCER_IS_NOT_CONNECTED": "Kafka producteur n'est pas connecté.",
      "KAFKA_PRODUCER_DISCONNECT_ERROR": "Kafka producteur erreur de déconnexion.",
      "KAFKA_PRODUCER_SEND_ERROR": "Kafka producteur erreur d'envoi.",
      "KAFKA_CONSUMER_CONNECTION_ERROR": "Kafka consommateur erreur de connexion.",
      "KAFKA_CONSUMER_IS_NOT_CONNECTED": "Kafka consommateur n'est pas connecté.",
      "KAFKA_CONSUMER_SUBSCRIBE_ERROR": "Kafka consommateur erreur d'abonnement.",
      "KAFKA_CONSUMER_DISCONNECT_ERROR": "Kafka consommateur erreur de déconnexion."
    },
    "errorValidator": {
      "USERNAME_IS_REQUIRED": "Le nom d'utilisateur est requis.",
      "USERNAME_MIN_LENGTH": "Le nom d'utilisateur doit contenir au moins 4 caractères.",
      "USERNAME_MAX_LENGTH": "Le nom d'utilisateur doit contenir au maximum 20 caractères.",
      "USERNAME_PATTERN": "Le nom d'utilisateur ne doit contenir que des lettres, des chiffres, des tirets et des underscores.",
      "EMAIL_IS_REQUIRED": "L'email est requis.",
      "EMAIL_MIN_LENGTH": "L'email doit contenir au moins 10 caractères.",
      "EMAIL_MAX_LENGTH": "L'email doit contenir au maximum 255 caractères.",
      "EMAIL_PATTERN_AND_BLACKLIST": "L'email doit être valide et ne doit pas être sur liste noire.",
      "PASSWORD_MIN_LENGTH": "Le mot de passe doit contenir au moins 8 caractères.",
      "PASSWORD_MAX_LENGTH": "Le mot de passe doit contenir au maximum 32 caractères.",
      "PASSWORD_PATTERN": "Le mot de passe doit contenir au moins une lettre majuscule, une lettre minuscule, un chiffre et un caractère spécial.",
      "EMAIL_OR_USERNAME_REQUIRED": "L'email ou le nom d'utilisateur est requis.",
      "PASSWORD_IS_REQUIRED": "Le mot de passe est requis.",
      "INVALID_DATE": "La date n'est pas valide.",
      "ROLE_IS_REQUIRED": "Le rôle est requis.",
      "INVALID_ROLE": "Le rôle n'est pas valide. (string)(A-Z, a-z, 0-9, _, -, .)",
      "PERMISSION_IS_REQUIRED": "La permission est requise.",
      "INVALID_PERMISSION": "La permission n'est pas valide. (string)(A-Z, a-z, 0-9, _, -, .)",
      "LIMIT_NOT_A_INTEGER": "La limite doit être un nombre entier.",
      "OFFSET_NOT_A_INTEGER": "Le décalage doit être un nombre entier.",
      "ID_IS_REQUIRED": "L'ID est requis.",
      "ID_NOT_A_INTEGER": "L'ID doit être un nombre entier.",
      "UUID_IS_REQUIRED": "L'UUID est requis.",
      "UUID_NOT_VALID": "L'UUID n'est pas valide.",
      "$IN_ARRAY_IS_EMPTY": "Le tableau $in est vide.",
      "$NIN_ARRAY_IS_EMPTY": "Le tableau $nin est vide.",
      "$EQ_NOT_VALID": "La valeur $eq n'est pas valide. (string, number, boolean)",
      "$NEQ_NOT_VALID": "La valeur $neq n'est pas valide. (string, number, boolean)",
      "$MATCH_NOT_VALID": "La valeur $match n'est pas valide. (string)",
      "$LT_NOT_VALID": "La valeur $lt n'est pas valide. (number)",
      "$LTE_NOT_VALID": "La valeur $lte n'est pas valide. (number)",
      "$GT_NOT_VALID": "La valeur $gt n'est pas valide. (number)",
      "$GTE_NOT_VALID": "La valeur $gte n'est pas valide. (number)"
    },
    "errorDatabase": {
      "DB_CONNECTION_ERROR": "Erreur de connexion à la base de données.",
      "DB_DISCONNECT_ERROR": "Erreur de déconnexion de la base de données.",
      "MODEL_NOT_CREATED": "Le modèle n'a pas été créé.",
      "MODEL_UNIQUE_CONSTRAINT_ERROR": "Le modèle {{tableName}} a une erreur de contrainte unique. [{{constraint}}]",
      "MODEL_NOT_FOUND": "Le modèle {{tableName}} n'a pas été trouvé.",
      "MODEL_NOT_UPDATED": "Le modèle {{tableName}}  n'a pas été mis à jour.",
      "MODEL_NOT_DELETED": "Le modèle {{tableName}} n'a pas été supprimé.",
      "OTHER_DATABASE_ERROR": "Erreur de base de données inconnue."
    },
    "errorDragonfly": {
      "DRAGONFLY_CONNECTION_ERROR": "Dragonfly erreur de connexion.",
      "DRAGONFLY_DISCONNECT_ERROR": "Dragonfly erreur de déconnexion.",
      "DRAGONFLY_NOT_CONNECTED": "Dragonfly n'est pas connecté."
    },
    "errorMiddleware": {
      "TOKEN_INVALID": "Le token est invalide",
      "TOKEN_INVALID_STRUCTURE": "La structure du token est invalide",
      "TOKEN_INVALID_SIGNATURE": "La signature du token est invalide",
      "TOKEN_EXPIRED": "Le token a expiré",
      "PERMISSION_DENIED": "Permission refusée"
    },
    "errorUseCase": {
      "PASSWORD_NOT_VALID": "Le mot de passe n'est pas valide."
    }
  },
  "http": {
    "LISTENING": "Le serveur HTTP est en écoute sur le port {{port}} en mode {{mode}}. (Prefix: {{prefix}}) PID: {{pid}}",
    "CLOSE": "Le serveur HTTP est arrêté.",

    "plugin": {
      "RateLimitPlugin": {
        "RATE_LIMIT": "Rate limit {{max}} atteint. Veuillez réessayer dans {{max}} secondes."
      }
    },
    "handler": {
      "microserviceHandler": {
        "ping": "pong",
        "info": "Recuperation des informations réussie."
      },
      "authHandler": {
        "login": "Connexion réussie.",
        "logout": "Déconnexion réussie.",
        "register": "Inscription réussie.",
        "delete": "Suppression réussie.",
        "update": "Mise à jour réussie."
      },
      "tokenHandler": {
        "check": "Le token est valide."
      },
      "CRUD": {
        "insert": "Création {{tableName}} réussie.",
        "findAll": "Récupération {{tableName}} réussie.",
        "findOne": "Récupération {{tableName}} réussie.",
        "find": "Récupération {{tableName}} réussie.",
        "updateAll": "Mise à jour {{tableName}} réussie.",
        "updateOne": "Mise à jour {{tableName}} réussie.",
        "update": "Mise à jour {{tableName}} réussie.",
        "deleteAll": "Suppression {{tableName}} réussie.",
        "deleteOne": "Suppression {{tableName}} réussie.",
        "delete": "Suppression {{tableName}} réussie.",
        "truncate": "Troncature {{tableName}} réussie.",
        "count": "Comptage {{tableName}} réussi."
      }
    }
  }
}
